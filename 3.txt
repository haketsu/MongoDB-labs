//1. найти все заказы данного пользователя
let userId = db.users.findOne({username:"sasha"},{'_id':1})
db.order.find({user_id:userId['_id']})

//2. запросить пользователя которому принадлежит конкретный заказ.
let productsId = db.products.find()
product = product_id:productsId()

review_by_item = db.reviews.findOne(
    {
       product_id: product_id['_id'],
    }
)
user_id = review_by_item['user_id']
user_who_bought = db.users.find(
    {
        '_id': user_id,
    }
)

//3. запрос находит товар с кратким названием wheel-barrow-9092
db.products.findOne(
    {
        slug: 'wheel-barrow-9092'
    }
)

//4. Получить информацию о категории товара с кратким названием wheel-barrow-9092
let productInf = db.products.findOne({
        slug:'wheel-barrow-9092'
    },
    {
        'main_cat_id':1, '_id':0
    })
db.categories.findOne({ _id: productInf['main_cat_id']})

//5. Запрос извлекает все обзоры, относящиеся к данном товару.
let productId = db.products.findOne(
    {
        slug: 'table'
    },
    {
        '_id': 1
    }
)

db.reviews.find({
    product_id: productId['_id']
})

//6. Отображать отзывы в определенном порядке, например, сортировать результаты запроса по количеству проголосовавших за полезность отзыва.
let productId = db.products.findOne({slug:'table'},{'_id':1})
db.reviews.find({product_id: productId['_id']}).sort({helpful_votes:1})

//7. Просмотр корневых категорий, в которых нет товаров.

//8. Найти всех пользователей, проживающих в в Верхнем Манхэттене
db.users.find({addresses:{$elemMatch:{name: 'home', city: 'Poznan'}}})

//9. Сгруппировать пользователей по приобретаемым ими товарам, ограничить результирующий набор заказами, сделанными в определенный период времени

//10. Построить составной индекс по артикулу и дате покупки
db.orders.createIndex({
    'lines_items.sku':1
})

//11.Запрос на поиск всех товаров, принадлежащих хотя бы одной из категорий

//12. Поиск товаров либо синего цвета либо произведенных компанией ACME
db.products.find({
    $or: [
        {'details.color': 'blue'},
        {'details.manufactured': 'Acme',}
    ]
})

//13. Найти все товары, имеющие одновременно теги gift(подарок) и тег garden(сад)
db.products.find({
    $and: [
        {'tags': 'gift'},
        {'tags': 'garden',}
    ]
})

//14. Поиск всех товаров производства фирмы ACME без тега gardering (садоводство)
db.products.find({
    "details.manufactured": "Acme",
     tags: {
        $nin: [
            "gardening"
        ]
     }
})

//15.Найти всех пользователей, фамилии которых начинаются не с буквы В
db.users.find({
    "last_name": {
        $not: /^B/
    }
})

//16. .Найти товары, помеченные одним из тегов gift или holiday и одним из тегов gardering или landscaping.
db.products.find({
    $and: [{
        tags: {
            $in: [
                "gift",
                 "holiday"
            ]
        }
    },
    {
    tags: {
        $in: [
            "gardening",
             "landscaping"
        ]
    }
    }]
})

//17. Запросить товары, для которых не заданы цвета
db.products.find({
    'details.color': {$exists: 0}
})

//18. Поиск товара с тегом 'soil'
db.products.find({
    'tags': 'soil'
})

//19. Можно считать, что в нулевом элементе массива addresses всегда хранится основной адрес доставки.
//Найти всех пользователей, для которых основной адрес доставки находится в Нью-Йорке
db.users.find({
    "addresses.0.city": "Poznan"
})

//20. Найти всех пользователей, домашний адрес которых находится в Нью-Йорке.
db.users.find({
"addresses.1.city": "Poznan"
})

//21. Найти пользователей, имеющих ровно три адреса
db.users.find({
    addresses: {
        $size: 2
    }
})

//22. Запрос на получение отзывов данного пользователя, содержащих в тексте слово best или worst (без учета регистра).
db.reviews.find({
    $or: [
        {text: /best/i},
        {text: /worst/i}
    ]
})

//23. Найти документы, в которых идентификатор хранится в виде строки
db.users.find({
    "addresses.city": {
        $type: 'string'
    }
})

//24. Вернуть первые 12 отзывов или последние 5.
db.reviews.find().sort({_id:1})limit(12)
db.reviews.find().sort({_id:-1})limit(5)

//25. Пропустить первые 24 отзыва и возвратить не более 12 отзывов.
db.reviews.find().sort({_id:1}).skip(24).limit(12)

//26. Подсчитать общее число голосов, отданных за все отзывы одного пользователя, а также усреднить число голосов по всем отзывам каждого пользователя.

//27. Получить статистику по продажам. Сколько товаров продано в каждом месяце?

//28. Найти отзыв, за который подано наибольшее число голосов.
db.reviews.find().sort({helpful_votes: -1}).limit(1)
// 29. Найти отзыв, за который подано наименьшее число голосов.
db.reviews.find().sort({helpful_votes: 1}).limit(1)
// 30. Отобрать различные теги для товаров из категории «Садовые инструменты»

